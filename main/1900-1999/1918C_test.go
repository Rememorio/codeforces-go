// Code generated by copypasta/template/generator_test.go
package main

import (
	"fmt"
	"github.com/EndlessCheng/codeforces-go/main/testutil"
	"io"
	"strings"
	"testing"
)

// https://codeforces.com/contest/1918/problem/C
// https://codeforces.com/problemset/status/1918/problem/C
func Test_cf1918C(t *testing.T) {
	testCases := [][2]string{
		{
			`10
4 6 0
0 3 2
9 6 10
92 256 23
165 839 201
1 14 5
2 7 2
96549 34359 13851
853686404475946 283666553522252166 127929199446003072
735268590557942972 916721749674600979 895150420120690183`,
			`2
1
1
164
542
5
3
37102
27934920819538516
104449824168870225`,
		},
	}
	testutil.AssertEqualStringCase(t, testCases, 0, cf1918C)
}

func TestCompare_cf1918C(_t *testing.T) {
	return
	testutil.DebugTLE = 0

	inputGenerator := func() string {
		//return ``
		rg := testutil.NewRandGenerator()
		rg.One()
		rg.Int(0, 99)
		rg.Int(0, 99)
		rg.Int(0, 99)
		rg.NewLine()
		return rg.String()
	}
	abs := func(x int) int {
		if x < 0 {
			return -x
		}
		return x
	}
	runBF := func(in io.Reader, out io.Writer) {
		solve := func(Case int) {
			var a,b,r int
			fmt.Fscan(in, &a, &b, &r)
			res := 0
			mask := 0
			for i := 63; i >= 0; i-- {
				if a>>i&1 == b>>i&1 {
					continue
				}
				newMask := mask + (1 << i)
				diff := ((a >> i & 1) << i) - ((b >> i & 1) << i)
				if newMask <= r {
					if abs(res+diff) <= abs(res-diff) {
						//填0
						res += diff
					} else {
						res -= diff
						mask = newMask
					}
				} else {
					res += diff
				}
			}
			fmt.Fprintln(out, abs(res))
		}

		T := 1
		fmt.Fscan(in, &T)
		for Case := 1; Case <= T; Case++ {
			solve(Case)
		}

		_leftData, _ := io.ReadAll(in)
		if _s := strings.TrimSpace(string(_leftData)); _s != "" {
			panic("有未读入的数据：\n" + _s)
		}
	}
	
	testutil.AssertEqualRunResultsInf(_t, inputGenerator, runBF, cf1918C)
}
